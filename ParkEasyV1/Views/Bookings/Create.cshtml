@model ParkEasyV1.Models.ViewModels.CreateBookingViewModel

@{
    ViewBag.Title = "Create a Booking";
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.css">
@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script src="https://code.highcharts.com/maps/highmaps.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.ui.position.js"></script>
    <script src="~/Scripts/parking-slots-map.js"></script>
    <script>
        $(function () {
            let parkingSlotMap = new ParkingSlotsMap();
            parkingSlotMap.Init();
        });
    </script>
}

<div class="container body-content">
    <h2 class="text-center" style="margin-top: 20px; margin-bottom: 30px;">Create a Booking</h2>

    @if (TempData["Error"] != null)
    {
        <center>
            <div class="alert alert-danger col-md-8 my-4" role="alert">
                <i class="far fa-calendar-times"></i> @TempData["Error"]
            </div>
        </center>
    }

    @if (TempData["Success"] != null)
    {
        <center>
            <div class="alert alert-success col-md-8 my-4" role="alert">
                <i class="far fa-calendar-times"></i> @TempData["Success"]
            </div>
        </center>
    }

    @using (Html.BeginForm("Create", "Bookings", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleMake, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleMake, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleMake, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleModel, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleModel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleModel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleColour, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleColour, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleColour, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleRegistration, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleRegistration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleRegistration, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row mt-5">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ParkingSlotFloor, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ParkingSlotFloor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ParkingSlotFloor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ParkingSlotNumber, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ParkingSlotNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ParkingSlotNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartureDate1, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DepartureDate1, "{0:MM/dd/yyyy}", new { @class = "form-control", @placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.DepartureDate1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DepartureTime, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ReturnDate, "{0:MM/dd/yyyy}", new { @class = "form-control", @placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnTime, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ReturnTime, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReturnTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div style="display: none;" id="selected-list">
            floor - None, Slot: None
        </div>
        <div style="display: none;">
            <button type="button" id="clear-btn">Clear Selection</button>
        </div>
        <br>
        <br>
        <div class="raw form-group">
            <div class="col-md-4">
                <label class="control-label">
                    Select floor:
                </label>
                <select class="form-control" id="floor-select">
                    <option value="1">First</option>
                    <option value="2">Second</option>
                    <option value="3">Third</option>
                </select>
            </div>
        </div>
        <div id="container">
            <div class="w-100 h-100 d-flex align-items-center justify-content-center">
                <div>
                    LOADING MAP...
                </div>
            </div>
        </div>


        <center style="margin-top: 20px;">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-darkblue font-weight-bold" value="Create Booking" />
                </div>
            </div>
        </center>

    }

    <style>
        #container {
            height: 100vh;
            width: 100%;
        }
    </style>


</div>
